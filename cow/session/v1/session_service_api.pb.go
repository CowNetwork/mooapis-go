// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.2
// source: cow/session/v1/session_service_api.proto

package session

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The player to create the session for.
	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSessionRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The session created by this service.
	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type GetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *SessionIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetSessionRequest) GetIdentifier() *SessionIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type GetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested session.
	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type StopSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *SessionIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The reason why the session is being stopped.
	//
	// Types that are assignable to Cause:
	//	*StopSessionRequest_Unknown
	//	*StopSessionRequest_Disconnected
	//	*StopSessionRequest_Error
	//	*StopSessionRequest_Custom
	Cause isStopSessionRequest_Cause `protobuf_oneof:"cause"`
}

func (x *StopSessionRequest) Reset() {
	*x = StopSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionRequest) ProtoMessage() {}

func (x *StopSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionRequest.ProtoReflect.Descriptor instead.
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{4}
}

func (x *StopSessionRequest) GetIdentifier() *SessionIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (m *StopSessionRequest) GetCause() isStopSessionRequest_Cause {
	if m != nil {
		return m.Cause
	}
	return nil
}

func (x *StopSessionRequest) GetUnknown() *StopCauseUnknown {
	if x, ok := x.GetCause().(*StopSessionRequest_Unknown); ok {
		return x.Unknown
	}
	return nil
}

func (x *StopSessionRequest) GetDisconnected() *StopCauseDisconnected {
	if x, ok := x.GetCause().(*StopSessionRequest_Disconnected); ok {
		return x.Disconnected
	}
	return nil
}

func (x *StopSessionRequest) GetError() *StopCauseError {
	if x, ok := x.GetCause().(*StopSessionRequest_Error); ok {
		return x.Error
	}
	return nil
}

func (x *StopSessionRequest) GetCustom() *StopCauseCustom {
	if x, ok := x.GetCause().(*StopSessionRequest_Custom); ok {
		return x.Custom
	}
	return nil
}

type isStopSessionRequest_Cause interface {
	isStopSessionRequest_Cause()
}

type StopSessionRequest_Unknown struct {
	Unknown *StopCauseUnknown `protobuf:"bytes,2,opt,name=unknown,proto3,oneof"`
}

type StopSessionRequest_Disconnected struct {
	Disconnected *StopCauseDisconnected `protobuf:"bytes,3,opt,name=disconnected,proto3,oneof"`
}

type StopSessionRequest_Error struct {
	Error *StopCauseError `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

type StopSessionRequest_Custom struct {
	Custom *StopCauseCustom `protobuf:"bytes,5,opt,name=custom,proto3,oneof"`
}

func (*StopSessionRequest_Unknown) isStopSessionRequest_Cause() {}

func (*StopSessionRequest_Disconnected) isStopSessionRequest_Cause() {}

func (*StopSessionRequest_Error) isStopSessionRequest_Cause() {}

func (*StopSessionRequest_Custom) isStopSessionRequest_Cause() {}

type StopSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The session that has been stopped (if not already).
	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *StopSessionResponse) Reset() {
	*x = StopSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionResponse) ProtoMessage() {}

func (x *StopSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionResponse.ProtoReflect.Descriptor instead.
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{5}
}

func (x *StopSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type KickPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The player to kick.
	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// The reason for the kick.
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// The initiator of the ban.
	Executor *Executor `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *KickPlayerRequest) Reset() {
	*x = KickPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerRequest) ProtoMessage() {}

func (x *KickPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerRequest.ProtoReflect.Descriptor instead.
func (*KickPlayerRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{6}
}

func (x *KickPlayerRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *KickPlayerRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *KickPlayerRequest) GetExecutor() *Executor {
	if x != nil {
		return x.Executor
	}
	return nil
}

type KickPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resulting kick.
	Kick *Kick `protobuf:"bytes,1,opt,name=kick,proto3" json:"kick,omitempty"`
}

func (x *KickPlayerResponse) Reset() {
	*x = KickPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerResponse) ProtoMessage() {}

func (x *KickPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerResponse.ProtoReflect.Descriptor instead.
func (*KickPlayerResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{7}
}

func (x *KickPlayerResponse) GetKick() *Kick {
	if x != nil {
		return x.Kick
	}
	return nil
}

type BanPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The player to ban.
	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// The reason for the ban.
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// The unix timestamp of the ban.
	BannedAt uint64 `protobuf:"varint,3,opt,name=banned_at,json=bannedAt,proto3" json:"banned_at,omitempty"`
	// The duration of this ban in seconds, starting from the banned_at timestamp.
	Duration int64 `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	// The initiator of the ban.
	Executor *Executor `protobuf:"bytes,5,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *BanPlayerRequest) Reset() {
	*x = BanPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanPlayerRequest) ProtoMessage() {}

func (x *BanPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanPlayerRequest.ProtoReflect.Descriptor instead.
func (*BanPlayerRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{8}
}

func (x *BanPlayerRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *BanPlayerRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BanPlayerRequest) GetBannedAt() uint64 {
	if x != nil {
		return x.BannedAt
	}
	return 0
}

func (x *BanPlayerRequest) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *BanPlayerRequest) GetExecutor() *Executor {
	if x != nil {
		return x.Executor
	}
	return nil
}

type BanPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resulting ban.
	Ban *Ban `protobuf:"bytes,1,opt,name=ban,proto3" json:"ban,omitempty"`
}

func (x *BanPlayerResponse) Reset() {
	*x = BanPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanPlayerResponse) ProtoMessage() {}

func (x *BanPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanPlayerResponse.ProtoReflect.Descriptor instead.
func (*BanPlayerResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{9}
}

func (x *BanPlayerResponse) GetBan() *Ban {
	if x != nil {
		return x.Ban
	}
	return nil
}

type GetBansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The player to receive ban information for.
	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *GetBansRequest) Reset() {
	*x = GetBansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBansRequest) ProtoMessage() {}

func (x *GetBansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBansRequest.ProtoReflect.Descriptor instead.
func (*GetBansRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetBansRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type GetBansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All bans associated to the given player.
	Bans []*Ban `protobuf:"bytes,1,rep,name=bans,proto3" json:"bans,omitempty"`
}

func (x *GetBansResponse) Reset() {
	*x = GetBansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBansResponse) ProtoMessage() {}

func (x *GetBansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBansResponse.ProtoReflect.Descriptor instead.
func (*GetBansResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetBansResponse) GetBans() []*Ban {
	if x != nil {
		return x.Bans
	}
	return nil
}

type RevokeBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the ban.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The initiator of the ban.
	Executor *Executor `protobuf:"bytes,2,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *RevokeBanRequest) Reset() {
	*x = RevokeBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeBanRequest) ProtoMessage() {}

func (x *RevokeBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeBanRequest.ProtoReflect.Descriptor instead.
func (*RevokeBanRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{12}
}

func (x *RevokeBanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RevokeBanRequest) GetExecutor() *Executor {
	if x != nil {
		return x.Executor
	}
	return nil
}

type RevokeBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The revoked ban.
	Ban *Ban `protobuf:"bytes,1,opt,name=ban,proto3" json:"ban,omitempty"`
}

func (x *RevokeBanResponse) Reset() {
	*x = RevokeBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeBanResponse) ProtoMessage() {}

func (x *RevokeBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeBanResponse.ProtoReflect.Descriptor instead.
func (*RevokeBanResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{13}
}

func (x *RevokeBanResponse) GetBan() *Ban {
	if x != nil {
		return x.Ban
	}
	return nil
}

type SetMaintenanceModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The session types affected by the maintenance mode.
	Types []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	// Whether the maintenance mode should be enabled for the given types.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *SetMaintenanceModeRequest) Reset() {
	*x = SetMaintenanceModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaintenanceModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaintenanceModeRequest) ProtoMessage() {}

func (x *SetMaintenanceModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaintenanceModeRequest.ProtoReflect.Descriptor instead.
func (*SetMaintenanceModeRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{14}
}

func (x *SetMaintenanceModeRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *SetMaintenanceModeRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SetMaintenanceModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The session types affected by the change.
	Types []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *SetMaintenanceModeResponse) Reset() {
	*x = SetMaintenanceModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMaintenanceModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaintenanceModeResponse) ProtoMessage() {}

func (x *SetMaintenanceModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaintenanceModeResponse.ProtoReflect.Descriptor instead.
func (*SetMaintenanceModeResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{15}
}

func (x *SetMaintenanceModeResponse) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

type BlacklistPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The player to blacklist.
	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// The message to show the blacklisted player upon connecting.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BlacklistPlayerRequest) Reset() {
	*x = BlacklistPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistPlayerRequest) ProtoMessage() {}

func (x *BlacklistPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistPlayerRequest.ProtoReflect.Descriptor instead.
func (*BlacklistPlayerRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{16}
}

func (x *BlacklistPlayerRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *BlacklistPlayerRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BlacklistPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resulting blacklist entry.
	Entry *BlacklistEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *BlacklistPlayerResponse) Reset() {
	*x = BlacklistPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistPlayerResponse) ProtoMessage() {}

func (x *BlacklistPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistPlayerResponse.ProtoReflect.Descriptor instead.
func (*BlacklistPlayerResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{17}
}

func (x *BlacklistPlayerResponse) GetEntry() *BlacklistEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type RevokeBlacklistPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The player to revoke the blacklist for.
	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *RevokeBlacklistPlayerRequest) Reset() {
	*x = RevokeBlacklistPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeBlacklistPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeBlacklistPlayerRequest) ProtoMessage() {}

func (x *RevokeBlacklistPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeBlacklistPlayerRequest.ProtoReflect.Descriptor instead.
func (*RevokeBlacklistPlayerRequest) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{18}
}

func (x *RevokeBlacklistPlayerRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type RevokeBlacklistPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The player the blacklist entry has been revoked for.
	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *RevokeBlacklistPlayerResponse) Reset() {
	*x = RevokeBlacklistPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_session_service_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeBlacklistPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeBlacklistPlayerResponse) ProtoMessage() {}

func (x *RevokeBlacklistPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_session_service_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeBlacklistPlayerResponse.ProtoReflect.Descriptor instead.
func (*RevokeBlacklistPlayerResponse) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_session_service_api_proto_rawDescGZIP(), []int{19}
}

func (x *RevokeBlacklistPlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

var File_cow_session_v1_session_service_api_proto protoreflect.FileDescriptor

var file_cow_session_v1_session_service_api_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x6f, 0x77, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x77, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x63, 0x6f, 0x77, 0x2f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x4a,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x77, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xde, 0x02, 0x0a, 0x12,
	0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x12, 0x4b, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x77, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x12, 0x36, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x13,
	0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x4b, 0x69, 0x63, 0x6b, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x3e, 0x0a, 0x12, 0x4b, 0x69,
	0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x69, 0x63, 0x6b, 0x52, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x22, 0xc9, 0x01, 0x0a, 0x10, 0x42,
	0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x62,
	0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x03, 0x62,
	0x61, 0x6e, 0x22, 0x40, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x73,
	0x22, 0x58, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x11, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x03, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x6e, 0x52, 0x03, 0x62, 0x61, 0x6e, 0x22, 0x4b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x16, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4f, 0x0a, 0x17, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x4e, 0x0a, 0x1c,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x1d,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0xa7, 0x07,
	0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x4b,
	0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x77, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63,
	0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69,
	0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x09, 0x42, 0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x73, 0x12, 0x1e, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x09, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x61, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x6f,
	0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6b, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x0f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x26, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x74, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x77,
	0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4c, 0x0a, 0x1e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x6d, 0x6f, 0x6f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x77, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cow_session_v1_session_service_api_proto_rawDescOnce sync.Once
	file_cow_session_v1_session_service_api_proto_rawDescData = file_cow_session_v1_session_service_api_proto_rawDesc
)

func file_cow_session_v1_session_service_api_proto_rawDescGZIP() []byte {
	file_cow_session_v1_session_service_api_proto_rawDescOnce.Do(func() {
		file_cow_session_v1_session_service_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_cow_session_v1_session_service_api_proto_rawDescData)
	})
	return file_cow_session_v1_session_service_api_proto_rawDescData
}

var file_cow_session_v1_session_service_api_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_cow_session_v1_session_service_api_proto_goTypes = []interface{}{
	(*CreateSessionRequest)(nil),          // 0: cow.session.v1.CreateSessionRequest
	(*CreateSessionResponse)(nil),         // 1: cow.session.v1.CreateSessionResponse
	(*GetSessionRequest)(nil),             // 2: cow.session.v1.GetSessionRequest
	(*GetSessionResponse)(nil),            // 3: cow.session.v1.GetSessionResponse
	(*StopSessionRequest)(nil),            // 4: cow.session.v1.StopSessionRequest
	(*StopSessionResponse)(nil),           // 5: cow.session.v1.StopSessionResponse
	(*KickPlayerRequest)(nil),             // 6: cow.session.v1.KickPlayerRequest
	(*KickPlayerResponse)(nil),            // 7: cow.session.v1.KickPlayerResponse
	(*BanPlayerRequest)(nil),              // 8: cow.session.v1.BanPlayerRequest
	(*BanPlayerResponse)(nil),             // 9: cow.session.v1.BanPlayerResponse
	(*GetBansRequest)(nil),                // 10: cow.session.v1.GetBansRequest
	(*GetBansResponse)(nil),               // 11: cow.session.v1.GetBansResponse
	(*RevokeBanRequest)(nil),              // 12: cow.session.v1.RevokeBanRequest
	(*RevokeBanResponse)(nil),             // 13: cow.session.v1.RevokeBanResponse
	(*SetMaintenanceModeRequest)(nil),     // 14: cow.session.v1.SetMaintenanceModeRequest
	(*SetMaintenanceModeResponse)(nil),    // 15: cow.session.v1.SetMaintenanceModeResponse
	(*BlacklistPlayerRequest)(nil),        // 16: cow.session.v1.BlacklistPlayerRequest
	(*BlacklistPlayerResponse)(nil),       // 17: cow.session.v1.BlacklistPlayerResponse
	(*RevokeBlacklistPlayerRequest)(nil),  // 18: cow.session.v1.RevokeBlacklistPlayerRequest
	(*RevokeBlacklistPlayerResponse)(nil), // 19: cow.session.v1.RevokeBlacklistPlayerResponse
	(*Player)(nil),                        // 20: cow.session.v1.Player
	(*Session)(nil),                       // 21: cow.session.v1.Session
	(*SessionIdentifier)(nil),             // 22: cow.session.v1.SessionIdentifier
	(*StopCauseUnknown)(nil),              // 23: cow.session.v1.StopCauseUnknown
	(*StopCauseDisconnected)(nil),         // 24: cow.session.v1.StopCauseDisconnected
	(*StopCauseError)(nil),                // 25: cow.session.v1.StopCauseError
	(*StopCauseCustom)(nil),               // 26: cow.session.v1.StopCauseCustom
	(*Executor)(nil),                      // 27: cow.session.v1.Executor
	(*Kick)(nil),                          // 28: cow.session.v1.Kick
	(*Ban)(nil),                           // 29: cow.session.v1.Ban
	(*BlacklistEntry)(nil),                // 30: cow.session.v1.BlacklistEntry
}
var file_cow_session_v1_session_service_api_proto_depIdxs = []int32{
	20, // 0: cow.session.v1.CreateSessionRequest.player:type_name -> cow.session.v1.Player
	21, // 1: cow.session.v1.CreateSessionResponse.session:type_name -> cow.session.v1.Session
	22, // 2: cow.session.v1.GetSessionRequest.identifier:type_name -> cow.session.v1.SessionIdentifier
	21, // 3: cow.session.v1.GetSessionResponse.session:type_name -> cow.session.v1.Session
	22, // 4: cow.session.v1.StopSessionRequest.identifier:type_name -> cow.session.v1.SessionIdentifier
	23, // 5: cow.session.v1.StopSessionRequest.unknown:type_name -> cow.session.v1.StopCauseUnknown
	24, // 6: cow.session.v1.StopSessionRequest.disconnected:type_name -> cow.session.v1.StopCauseDisconnected
	25, // 7: cow.session.v1.StopSessionRequest.error:type_name -> cow.session.v1.StopCauseError
	26, // 8: cow.session.v1.StopSessionRequest.custom:type_name -> cow.session.v1.StopCauseCustom
	21, // 9: cow.session.v1.StopSessionResponse.session:type_name -> cow.session.v1.Session
	20, // 10: cow.session.v1.KickPlayerRequest.player:type_name -> cow.session.v1.Player
	27, // 11: cow.session.v1.KickPlayerRequest.executor:type_name -> cow.session.v1.Executor
	28, // 12: cow.session.v1.KickPlayerResponse.kick:type_name -> cow.session.v1.Kick
	20, // 13: cow.session.v1.BanPlayerRequest.player:type_name -> cow.session.v1.Player
	27, // 14: cow.session.v1.BanPlayerRequest.executor:type_name -> cow.session.v1.Executor
	29, // 15: cow.session.v1.BanPlayerResponse.ban:type_name -> cow.session.v1.Ban
	20, // 16: cow.session.v1.GetBansRequest.player:type_name -> cow.session.v1.Player
	29, // 17: cow.session.v1.GetBansResponse.bans:type_name -> cow.session.v1.Ban
	27, // 18: cow.session.v1.RevokeBanRequest.executor:type_name -> cow.session.v1.Executor
	29, // 19: cow.session.v1.RevokeBanResponse.ban:type_name -> cow.session.v1.Ban
	20, // 20: cow.session.v1.BlacklistPlayerRequest.player:type_name -> cow.session.v1.Player
	30, // 21: cow.session.v1.BlacklistPlayerResponse.entry:type_name -> cow.session.v1.BlacklistEntry
	20, // 22: cow.session.v1.RevokeBlacklistPlayerRequest.player:type_name -> cow.session.v1.Player
	20, // 23: cow.session.v1.RevokeBlacklistPlayerResponse.player:type_name -> cow.session.v1.Player
	0,  // 24: cow.session.v1.SessionService.CreateSession:input_type -> cow.session.v1.CreateSessionRequest
	4,  // 25: cow.session.v1.SessionService.StopSession:input_type -> cow.session.v1.StopSessionRequest
	2,  // 26: cow.session.v1.SessionService.GetSession:input_type -> cow.session.v1.GetSessionRequest
	6,  // 27: cow.session.v1.SessionService.KickPlayer:input_type -> cow.session.v1.KickPlayerRequest
	8,  // 28: cow.session.v1.SessionService.BanPlayer:input_type -> cow.session.v1.BanPlayerRequest
	10, // 29: cow.session.v1.SessionService.GetBans:input_type -> cow.session.v1.GetBansRequest
	12, // 30: cow.session.v1.SessionService.RevokeBan:input_type -> cow.session.v1.RevokeBanRequest
	14, // 31: cow.session.v1.SessionService.SetMaintenanceMode:input_type -> cow.session.v1.SetMaintenanceModeRequest
	16, // 32: cow.session.v1.SessionService.BlacklistPlayer:input_type -> cow.session.v1.BlacklistPlayerRequest
	18, // 33: cow.session.v1.SessionService.RevokeBlacklistPlayer:input_type -> cow.session.v1.RevokeBlacklistPlayerRequest
	1,  // 34: cow.session.v1.SessionService.CreateSession:output_type -> cow.session.v1.CreateSessionResponse
	5,  // 35: cow.session.v1.SessionService.StopSession:output_type -> cow.session.v1.StopSessionResponse
	3,  // 36: cow.session.v1.SessionService.GetSession:output_type -> cow.session.v1.GetSessionResponse
	7,  // 37: cow.session.v1.SessionService.KickPlayer:output_type -> cow.session.v1.KickPlayerResponse
	9,  // 38: cow.session.v1.SessionService.BanPlayer:output_type -> cow.session.v1.BanPlayerResponse
	11, // 39: cow.session.v1.SessionService.GetBans:output_type -> cow.session.v1.GetBansResponse
	13, // 40: cow.session.v1.SessionService.RevokeBan:output_type -> cow.session.v1.RevokeBanResponse
	15, // 41: cow.session.v1.SessionService.SetMaintenanceMode:output_type -> cow.session.v1.SetMaintenanceModeResponse
	17, // 42: cow.session.v1.SessionService.BlacklistPlayer:output_type -> cow.session.v1.BlacklistPlayerResponse
	19, // 43: cow.session.v1.SessionService.RevokeBlacklistPlayer:output_type -> cow.session.v1.RevokeBlacklistPlayerResponse
	34, // [34:44] is the sub-list for method output_type
	24, // [24:34] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_cow_session_v1_session_service_api_proto_init() }
func file_cow_session_v1_session_service_api_proto_init() {
	if File_cow_session_v1_session_service_api_proto != nil {
		return
	}
	file_cow_session_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cow_session_v1_session_service_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaintenanceModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMaintenanceModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacklistPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacklistPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeBlacklistPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_session_service_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeBlacklistPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cow_session_v1_session_service_api_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StopSessionRequest_Unknown)(nil),
		(*StopSessionRequest_Disconnected)(nil),
		(*StopSessionRequest_Error)(nil),
		(*StopSessionRequest_Custom)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cow_session_v1_session_service_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cow_session_v1_session_service_api_proto_goTypes,
		DependencyIndexes: file_cow_session_v1_session_service_api_proto_depIdxs,
		MessageInfos:      file_cow_session_v1_session_service_api_proto_msgTypes,
	}.Build()
	File_cow_session_v1_session_service_api_proto = out.File
	file_cow_session_v1_session_service_api_proto_rawDesc = nil
	file_cow_session_v1_session_service_api_proto_goTypes = nil
	file_cow_session_v1_session_service_api_proto_depIdxs = nil
}
