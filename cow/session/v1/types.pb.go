// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.2
// source: cow/session/v1/types.proto

package session

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id of the session.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The player this session belongs to.
	Player *Player `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	// The current (or last) state of this session.
	//
	// Types that are assignable to State:
	//	*Session_Unknown
	//	*Session_Initialized
	//	*Session_Stopped
	State isSession_State `protobuf_oneof:"state"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (m *Session) GetState() isSession_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *Session) GetUnknown() *StateUnknown {
	if x, ok := x.GetState().(*Session_Unknown); ok {
		return x.Unknown
	}
	return nil
}

func (x *Session) GetInitialized() *StateInitialized {
	if x, ok := x.GetState().(*Session_Initialized); ok {
		return x.Initialized
	}
	return nil
}

func (x *Session) GetStopped() *StateStopped {
	if x, ok := x.GetState().(*Session_Stopped); ok {
		return x.Stopped
	}
	return nil
}

type isSession_State interface {
	isSession_State()
}

type Session_Unknown struct {
	Unknown *StateUnknown `protobuf:"bytes,3,opt,name=unknown,proto3,oneof"`
}

type Session_Initialized struct {
	Initialized *StateInitialized `protobuf:"bytes,4,opt,name=initialized,proto3,oneof"`
}

type Session_Stopped struct {
	Stopped *StateStopped `protobuf:"bytes,5,opt,name=stopped,proto3,oneof"`
}

func (*Session_Unknown) isSession_State() {}

func (*Session_Initialized) isSession_State() {}

func (*Session_Stopped) isSession_State() {}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the player, based on the given type.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The type the player identifier corresponds to.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// The session is in an unknown state.
type StateUnknown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateUnknown) Reset() {
	*x = StateUnknown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUnknown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUnknown) ProtoMessage() {}

func (x *StateUnknown) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUnknown.ProtoReflect.Descriptor instead.
func (*StateUnknown) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{2}
}

// The session has successfully been initialized.
type StateInitialized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateInitialized) Reset() {
	*x = StateInitialized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateInitialized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateInitialized) ProtoMessage() {}

func (x *StateInitialized) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateInitialized.ProtoReflect.Descriptor instead.
func (*StateInitialized) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{3}
}

// The session has been stopped.
type StateStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The reason why the session has been stopped.
	//
	// Types that are assignable to Cause:
	//	*StateStopped_Unknown
	//	*StateStopped_Disconnected
	//	*StateStopped_Maintenance
	//	*StateStopped_Error
	//	*StateStopped_Kicked
	//	*StateStopped_Banned
	//	*StateStopped_Blacklisted
	//	*StateStopped_Custom
	Cause isStateStopped_Cause `protobuf_oneof:"cause"`
}

func (x *StateStopped) Reset() {
	*x = StateStopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateStopped) ProtoMessage() {}

func (x *StateStopped) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateStopped.ProtoReflect.Descriptor instead.
func (*StateStopped) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{4}
}

func (m *StateStopped) GetCause() isStateStopped_Cause {
	if m != nil {
		return m.Cause
	}
	return nil
}

func (x *StateStopped) GetUnknown() *StopCauseUnknown {
	if x, ok := x.GetCause().(*StateStopped_Unknown); ok {
		return x.Unknown
	}
	return nil
}

func (x *StateStopped) GetDisconnected() *StopCauseDisconnected {
	if x, ok := x.GetCause().(*StateStopped_Disconnected); ok {
		return x.Disconnected
	}
	return nil
}

func (x *StateStopped) GetMaintenance() *StopCauseMaintenance {
	if x, ok := x.GetCause().(*StateStopped_Maintenance); ok {
		return x.Maintenance
	}
	return nil
}

func (x *StateStopped) GetError() *StopCauseError {
	if x, ok := x.GetCause().(*StateStopped_Error); ok {
		return x.Error
	}
	return nil
}

func (x *StateStopped) GetKicked() *StopCauseKicked {
	if x, ok := x.GetCause().(*StateStopped_Kicked); ok {
		return x.Kicked
	}
	return nil
}

func (x *StateStopped) GetBanned() *StopCauseBanned {
	if x, ok := x.GetCause().(*StateStopped_Banned); ok {
		return x.Banned
	}
	return nil
}

func (x *StateStopped) GetBlacklisted() *StopCauseBlacklisted {
	if x, ok := x.GetCause().(*StateStopped_Blacklisted); ok {
		return x.Blacklisted
	}
	return nil
}

func (x *StateStopped) GetCustom() *StopCauseCustom {
	if x, ok := x.GetCause().(*StateStopped_Custom); ok {
		return x.Custom
	}
	return nil
}

type isStateStopped_Cause interface {
	isStateStopped_Cause()
}

type StateStopped_Unknown struct {
	Unknown *StopCauseUnknown `protobuf:"bytes,1,opt,name=unknown,proto3,oneof"`
}

type StateStopped_Disconnected struct {
	Disconnected *StopCauseDisconnected `protobuf:"bytes,2,opt,name=disconnected,proto3,oneof"`
}

type StateStopped_Maintenance struct {
	Maintenance *StopCauseMaintenance `protobuf:"bytes,3,opt,name=maintenance,proto3,oneof"`
}

type StateStopped_Error struct {
	Error *StopCauseError `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

type StateStopped_Kicked struct {
	Kicked *StopCauseKicked `protobuf:"bytes,5,opt,name=kicked,proto3,oneof"`
}

type StateStopped_Banned struct {
	Banned *StopCauseBanned `protobuf:"bytes,6,opt,name=banned,proto3,oneof"`
}

type StateStopped_Blacklisted struct {
	Blacklisted *StopCauseBlacklisted `protobuf:"bytes,7,opt,name=blacklisted,proto3,oneof"`
}

type StateStopped_Custom struct {
	Custom *StopCauseCustom `protobuf:"bytes,8,opt,name=custom,proto3,oneof"`
}

func (*StateStopped_Unknown) isStateStopped_Cause() {}

func (*StateStopped_Disconnected) isStateStopped_Cause() {}

func (*StateStopped_Maintenance) isStateStopped_Cause() {}

func (*StateStopped_Error) isStateStopped_Cause() {}

func (*StateStopped_Kicked) isStateStopped_Cause() {}

func (*StateStopped_Banned) isStateStopped_Cause() {}

func (*StateStopped_Blacklisted) isStateStopped_Cause() {}

func (*StateStopped_Custom) isStateStopped_Cause() {}

// The session has stopped because of unknown reasons.
type StopCauseUnknown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopCauseUnknown) Reset() {
	*x = StopCauseUnknown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseUnknown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseUnknown) ProtoMessage() {}

func (x *StopCauseUnknown) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseUnknown.ProtoReflect.Descriptor instead.
func (*StopCauseUnknown) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{5}
}

// The session stopped because the player disconnected or has been disconnected.
type StopCauseDisconnected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopCauseDisconnected) Reset() {
	*x = StopCauseDisconnected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseDisconnected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseDisconnected) ProtoMessage() {}

func (x *StopCauseDisconnected) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseDisconnected.ProtoReflect.Descriptor instead.
func (*StopCauseDisconnected) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{6}
}

// The session stopped because of maintenance.
type StopCauseMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopCauseMaintenance) Reset() {
	*x = StopCauseMaintenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseMaintenance) ProtoMessage() {}

func (x *StopCauseMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseMaintenance.ProtoReflect.Descriptor instead.
func (*StopCauseMaintenance) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{7}
}

// The session stopped due to an error.
type StopCauseError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StopCauseError) Reset() {
	*x = StopCauseError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseError) ProtoMessage() {}

func (x *StopCauseError) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseError.ProtoReflect.Descriptor instead.
func (*StopCauseError) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{8}
}

func (x *StopCauseError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// The session stopped because the player has been kicked.
type StopCauseKicked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The underlying kick.
	Kick *Kick `protobuf:"bytes,1,opt,name=kick,proto3" json:"kick,omitempty"`
}

func (x *StopCauseKicked) Reset() {
	*x = StopCauseKicked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseKicked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseKicked) ProtoMessage() {}

func (x *StopCauseKicked) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseKicked.ProtoReflect.Descriptor instead.
func (*StopCauseKicked) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{9}
}

func (x *StopCauseKicked) GetKick() *Kick {
	if x != nil {
		return x.Kick
	}
	return nil
}

// The session stopped because the player is/has been banned.
type StopCauseBanned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The underlying ban.
	Ban *Ban `protobuf:"bytes,1,opt,name=ban,proto3" json:"ban,omitempty"`
}

func (x *StopCauseBanned) Reset() {
	*x = StopCauseBanned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseBanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseBanned) ProtoMessage() {}

func (x *StopCauseBanned) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseBanned.ProtoReflect.Descriptor instead.
func (*StopCauseBanned) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{10}
}

func (x *StopCauseBanned) GetBan() *Ban {
	if x != nil {
		return x.Ban
	}
	return nil
}

// The session stopped because the player is/has been blacklisted.
type StopCauseBlacklisted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The blacklist entry.
	Entry *BlacklistEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *StopCauseBlacklisted) Reset() {
	*x = StopCauseBlacklisted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseBlacklisted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseBlacklisted) ProtoMessage() {}

func (x *StopCauseBlacklisted) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseBlacklisted.ProtoReflect.Descriptor instead.
func (*StopCauseBlacklisted) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{11}
}

func (x *StopCauseBlacklisted) GetEntry() *BlacklistEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// The session stopped because of maintenance.
type StopCauseCustom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StopCauseCustom) Reset() {
	*x = StopCauseCustom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCauseCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCauseCustom) ProtoMessage() {}

func (x *StopCauseCustom) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCauseCustom.ProtoReflect.Descriptor instead.
func (*StopCauseCustom) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{12}
}

func (x *StopCauseCustom) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Ban struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the ban.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The banned player.
	Player *Player `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	// The reason of the ban.
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// The unix timestamp of the ban.
	BannedAt uint64 `protobuf:"varint,4,opt,name=banned_at,json=bannedAt,proto3" json:"banned_at,omitempty"`
	// The duration of this ban in seconds, starting from the banned_at timestamp.
	Duration int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// The initiator of the ban.
	Executor *Executor `protobuf:"bytes,6,opt,name=executor,proto3" json:"executor,omitempty"`
	// The revoke of the ban, if there is one.
	Revoke *BanRevoke `protobuf:"bytes,7,opt,name=revoke,proto3,oneof" json:"revoke,omitempty"`
}

func (x *Ban) Reset() {
	*x = Ban{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ban) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ban) ProtoMessage() {}

func (x *Ban) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ban.ProtoReflect.Descriptor instead.
func (*Ban) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{13}
}

func (x *Ban) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ban) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *Ban) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Ban) GetBannedAt() uint64 {
	if x != nil {
		return x.BannedAt
	}
	return 0
}

func (x *Ban) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Ban) GetExecutor() *Executor {
	if x != nil {
		return x.Executor
	}
	return nil
}

func (x *Ban) GetRevoke() *BanRevoke {
	if x != nil {
		return x.Revoke
	}
	return nil
}

type BanRevoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the revoke.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The timestamp of the revoke.
	RevokedAt uint64 `protobuf:"varint,2,opt,name=revoked_at,json=revokedAt,proto3" json:"revoked_at,omitempty"`
	// The initiator of the revoke.
	Executor *Executor `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *BanRevoke) Reset() {
	*x = BanRevoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanRevoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanRevoke) ProtoMessage() {}

func (x *BanRevoke) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanRevoke.ProtoReflect.Descriptor instead.
func (*BanRevoke) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{14}
}

func (x *BanRevoke) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BanRevoke) GetRevokedAt() uint64 {
	if x != nil {
		return x.RevokedAt
	}
	return 0
}

func (x *BanRevoke) GetExecutor() *Executor {
	if x != nil {
		return x.Executor
	}
	return nil
}

type Kick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the kick.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The kicked player.
	Player *Player `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	// The reason of the ban.
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// The unix timestamp of the kick.
	KickedAt uint64 `protobuf:"varint,4,opt,name=kicked_at,json=kickedAt,proto3" json:"kicked_at,omitempty"`
	// The initiator of the kick.
	Executor *Executor `protobuf:"bytes,5,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *Kick) Reset() {
	*x = Kick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kick) ProtoMessage() {}

func (x *Kick) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kick.ProtoReflect.Descriptor instead.
func (*Kick) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{15}
}

func (x *Kick) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Kick) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *Kick) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Kick) GetKickedAt() uint64 {
	if x != nil {
		return x.KickedAt
	}
	return 0
}

func (x *Kick) GetExecutor() *Executor {
	if x != nil {
		return x.Executor
	}
	return nil
}

type BlacklistEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the entry.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The blacklisted player.
	Player *Player `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	// The message to show the blacklisted player upon connecting.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BlacklistEntry) Reset() {
	*x = BlacklistEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistEntry) ProtoMessage() {}

func (x *BlacklistEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistEntry.ProtoReflect.Descriptor instead.
func (*BlacklistEntry) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{16}
}

func (x *BlacklistEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BlacklistEntry) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *BlacklistEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SessionIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//	*SessionIdentifier_Id
	//	*SessionIdentifier_Player
	Identifier isSessionIdentifier_Identifier `protobuf_oneof:"identifier"`
}

func (x *SessionIdentifier) Reset() {
	*x = SessionIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIdentifier) ProtoMessage() {}

func (x *SessionIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIdentifier.ProtoReflect.Descriptor instead.
func (*SessionIdentifier) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{17}
}

func (m *SessionIdentifier) GetIdentifier() isSessionIdentifier_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *SessionIdentifier) GetId() string {
	if x, ok := x.GetIdentifier().(*SessionIdentifier_Id); ok {
		return x.Id
	}
	return ""
}

func (x *SessionIdentifier) GetPlayer() *Player {
	if x, ok := x.GetIdentifier().(*SessionIdentifier_Player); ok {
		return x.Player
	}
	return nil
}

type isSessionIdentifier_Identifier interface {
	isSessionIdentifier_Identifier()
}

type SessionIdentifier_Id struct {
	// The id of the session to receive.
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type SessionIdentifier_Player struct {
	// The player to receive the session for.
	Player *Player `protobuf:"bytes,2,opt,name=player,proto3,oneof"`
}

func (*SessionIdentifier_Id) isSessionIdentifier_Identifier() {}

func (*SessionIdentifier_Player) isSessionIdentifier_Identifier() {}

type Executor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Executor:
	//	*Executor_Id
	//	*Executor_Player
	Executor isExecutor_Executor `protobuf_oneof:"executor"`
}

func (x *Executor) Reset() {
	*x = Executor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cow_session_v1_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Executor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Executor) ProtoMessage() {}

func (x *Executor) ProtoReflect() protoreflect.Message {
	mi := &file_cow_session_v1_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Executor.ProtoReflect.Descriptor instead.
func (*Executor) Descriptor() ([]byte, []int) {
	return file_cow_session_v1_types_proto_rawDescGZIP(), []int{18}
}

func (m *Executor) GetExecutor() isExecutor_Executor {
	if m != nil {
		return m.Executor
	}
	return nil
}

func (x *Executor) GetId() string {
	if x, ok := x.GetExecutor().(*Executor_Id); ok {
		return x.Id
	}
	return ""
}

func (x *Executor) GetPlayer() *Player {
	if x, ok := x.GetExecutor().(*Executor_Player); ok {
		return x.Player
	}
	return nil
}

type isExecutor_Executor interface {
	isExecutor_Executor()
}

type Executor_Id struct {
	// The globally unique identifier of the executor (e.g. user id).
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type Executor_Player struct {
	// The executing player.
	Player *Player `protobuf:"bytes,2,opt,name=player,proto3,oneof"`
}

func (*Executor_Id) isExecutor_Executor() {}

func (*Executor_Player) isExecutor_Executor() {}

var File_cow_session_v1_types_proto protoreflect.FileDescriptor

var file_cow_session_v1_types_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x77, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f,
	0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x8c, 0x02, 0x0a,
	0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x77, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x12, 0x44, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x77, 0x2e,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x9f, 0x04,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x3c,
	0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x48, 0x00, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x4b, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x0b, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x06, 0x6b,
	0x69, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06,
	0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x16, 0x0a, 0x14,
	0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x2a, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x3b, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x4b, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x22, 0x38, 0x0a,
	0x0f, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75, 0x73, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x03, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x6e, 0x52, 0x03, 0x62, 0x61, 0x6e, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x75,
	0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x03, 0x42, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x77,
	0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x22, 0x70, 0x0a, 0x09, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x34, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x04, 0x4b, 0x69, 0x63, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6b, 0x69, 0x63, 0x6b,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x0e, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x5a, 0x0a,
	0x08, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x77, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x0a, 0x0a,
	0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x42, 0x4c, 0x0a, 0x1e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x63, 0x6f, 0x77, 0x2e, 0x6d, 0x6f, 0x6f, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x77, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cow_session_v1_types_proto_rawDescOnce sync.Once
	file_cow_session_v1_types_proto_rawDescData = file_cow_session_v1_types_proto_rawDesc
)

func file_cow_session_v1_types_proto_rawDescGZIP() []byte {
	file_cow_session_v1_types_proto_rawDescOnce.Do(func() {
		file_cow_session_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_cow_session_v1_types_proto_rawDescData)
	})
	return file_cow_session_v1_types_proto_rawDescData
}

var file_cow_session_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_cow_session_v1_types_proto_goTypes = []interface{}{
	(*Session)(nil),               // 0: cow.session.v1.Session
	(*Player)(nil),                // 1: cow.session.v1.Player
	(*StateUnknown)(nil),          // 2: cow.session.v1.StateUnknown
	(*StateInitialized)(nil),      // 3: cow.session.v1.StateInitialized
	(*StateStopped)(nil),          // 4: cow.session.v1.StateStopped
	(*StopCauseUnknown)(nil),      // 5: cow.session.v1.StopCauseUnknown
	(*StopCauseDisconnected)(nil), // 6: cow.session.v1.StopCauseDisconnected
	(*StopCauseMaintenance)(nil),  // 7: cow.session.v1.StopCauseMaintenance
	(*StopCauseError)(nil),        // 8: cow.session.v1.StopCauseError
	(*StopCauseKicked)(nil),       // 9: cow.session.v1.StopCauseKicked
	(*StopCauseBanned)(nil),       // 10: cow.session.v1.StopCauseBanned
	(*StopCauseBlacklisted)(nil),  // 11: cow.session.v1.StopCauseBlacklisted
	(*StopCauseCustom)(nil),       // 12: cow.session.v1.StopCauseCustom
	(*Ban)(nil),                   // 13: cow.session.v1.Ban
	(*BanRevoke)(nil),             // 14: cow.session.v1.BanRevoke
	(*Kick)(nil),                  // 15: cow.session.v1.Kick
	(*BlacklistEntry)(nil),        // 16: cow.session.v1.BlacklistEntry
	(*SessionIdentifier)(nil),     // 17: cow.session.v1.SessionIdentifier
	(*Executor)(nil),              // 18: cow.session.v1.Executor
}
var file_cow_session_v1_types_proto_depIdxs = []int32{
	1,  // 0: cow.session.v1.Session.player:type_name -> cow.session.v1.Player
	2,  // 1: cow.session.v1.Session.unknown:type_name -> cow.session.v1.StateUnknown
	3,  // 2: cow.session.v1.Session.initialized:type_name -> cow.session.v1.StateInitialized
	4,  // 3: cow.session.v1.Session.stopped:type_name -> cow.session.v1.StateStopped
	5,  // 4: cow.session.v1.StateStopped.unknown:type_name -> cow.session.v1.StopCauseUnknown
	6,  // 5: cow.session.v1.StateStopped.disconnected:type_name -> cow.session.v1.StopCauseDisconnected
	7,  // 6: cow.session.v1.StateStopped.maintenance:type_name -> cow.session.v1.StopCauseMaintenance
	8,  // 7: cow.session.v1.StateStopped.error:type_name -> cow.session.v1.StopCauseError
	9,  // 8: cow.session.v1.StateStopped.kicked:type_name -> cow.session.v1.StopCauseKicked
	10, // 9: cow.session.v1.StateStopped.banned:type_name -> cow.session.v1.StopCauseBanned
	11, // 10: cow.session.v1.StateStopped.blacklisted:type_name -> cow.session.v1.StopCauseBlacklisted
	12, // 11: cow.session.v1.StateStopped.custom:type_name -> cow.session.v1.StopCauseCustom
	15, // 12: cow.session.v1.StopCauseKicked.kick:type_name -> cow.session.v1.Kick
	13, // 13: cow.session.v1.StopCauseBanned.ban:type_name -> cow.session.v1.Ban
	16, // 14: cow.session.v1.StopCauseBlacklisted.entry:type_name -> cow.session.v1.BlacklistEntry
	1,  // 15: cow.session.v1.Ban.player:type_name -> cow.session.v1.Player
	18, // 16: cow.session.v1.Ban.executor:type_name -> cow.session.v1.Executor
	14, // 17: cow.session.v1.Ban.revoke:type_name -> cow.session.v1.BanRevoke
	18, // 18: cow.session.v1.BanRevoke.executor:type_name -> cow.session.v1.Executor
	1,  // 19: cow.session.v1.Kick.player:type_name -> cow.session.v1.Player
	18, // 20: cow.session.v1.Kick.executor:type_name -> cow.session.v1.Executor
	1,  // 21: cow.session.v1.BlacklistEntry.player:type_name -> cow.session.v1.Player
	1,  // 22: cow.session.v1.SessionIdentifier.player:type_name -> cow.session.v1.Player
	1,  // 23: cow.session.v1.Executor.player:type_name -> cow.session.v1.Player
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_cow_session_v1_types_proto_init() }
func file_cow_session_v1_types_proto_init() {
	if File_cow_session_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cow_session_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUnknown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateInitialized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateStopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseUnknown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseDisconnected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseMaintenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseKicked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseBanned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseBlacklisted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCauseCustom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ban); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanRevoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacklistEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cow_session_v1_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Executor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cow_session_v1_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Session_Unknown)(nil),
		(*Session_Initialized)(nil),
		(*Session_Stopped)(nil),
	}
	file_cow_session_v1_types_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StateStopped_Unknown)(nil),
		(*StateStopped_Disconnected)(nil),
		(*StateStopped_Maintenance)(nil),
		(*StateStopped_Error)(nil),
		(*StateStopped_Kicked)(nil),
		(*StateStopped_Banned)(nil),
		(*StateStopped_Blacklisted)(nil),
		(*StateStopped_Custom)(nil),
	}
	file_cow_session_v1_types_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_cow_session_v1_types_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*SessionIdentifier_Id)(nil),
		(*SessionIdentifier_Player)(nil),
	}
	file_cow_session_v1_types_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Executor_Id)(nil),
		(*Executor_Player)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cow_session_v1_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cow_session_v1_types_proto_goTypes,
		DependencyIndexes: file_cow_session_v1_types_proto_depIdxs,
		MessageInfos:      file_cow_session_v1_types_proto_msgTypes,
	}.Build()
	File_cow_session_v1_types_proto = out.File
	file_cow_session_v1_types_proto_rawDesc = nil
	file_cow_session_v1_types_proto_goTypes = nil
	file_cow_session_v1_types_proto_depIdxs = nil
}
